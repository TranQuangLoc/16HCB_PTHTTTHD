//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTestProjectDiemDanh.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Project_16HCB_CSDLEntities : DbContext
    {
        public Project_16HCB_CSDLEntities()
            : base("name=Project_16HCB_CSDLEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCOUNT> ACCOUNTs { get; set; }
        public virtual DbSet<DIEM> DIEMs { get; set; }
        public virtual DbSet<GIAOVIEN> GIAOVIENs { get; set; }
        public virtual DbSet<GIAOVIEN_MONHOC> GIAOVIEN_MONHOC { get; set; }
        public virtual DbSet<HOCKY> HOCKies { get; set; }
        public virtual DbSet<KETQUADIEMDANH> KETQUADIEMDANHs { get; set; }
        public virtual DbSet<KHOA> KHOAs { get; set; }
        public virtual DbSet<LOPHOC> LOPHOCs { get; set; }
        public virtual DbSet<MAIL> MAILs { get; set; }
        public virtual DbSet<MONHOC> MONHOCs { get; set; }
        public virtual DbSet<MONHOC_HOCKY> MONHOC_HOCKY { get; set; }
        public virtual DbSet<PHONG> PHONGs { get; set; }
        public virtual DbSet<SINHVIEN> SINHVIENs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<THOIKHOABIEU> THOIKHOABIEUx { get; set; }
        public virtual DbSet<USER> USERS { get; set; }
        public virtual DbSet<VANTAY> VANTAYs { get; set; }
    
        public virtual ObjectResult<Nullable<int>> kiemtraSVTonTai(Nullable<int> mSSV)
        {
            var mSSVParameter = mSSV.HasValue ?
                new ObjectParameter("MSSV", mSSV) :
                new ObjectParameter("MSSV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("kiemtraSVTonTai", mSSVParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_getVanTay(string maVantay)
        {
            var maVantayParameter = maVantay != null ?
                new ObjectParameter("maVantay", maVantay) :
                new ObjectParameter("maVantay", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getVanTay", maVantayParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_layThongTinThemKetQuaDiemDanh(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_layThongTinThemKetQuaDiemDanh", userIdParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_themBangMail_Result> sp_themBangMail(string tieuDe, Nullable<int> maNguoiGui, Nullable<int> maNguoiNhan, string noiDung, string loaiThu)
        {
            var tieuDeParameter = tieuDe != null ?
                new ObjectParameter("tieuDe", tieuDe) :
                new ObjectParameter("tieuDe", typeof(string));
    
            var maNguoiGuiParameter = maNguoiGui.HasValue ?
                new ObjectParameter("maNguoiGui", maNguoiGui) :
                new ObjectParameter("maNguoiGui", typeof(int));
    
            var maNguoiNhanParameter = maNguoiNhan.HasValue ?
                new ObjectParameter("maNguoiNhan", maNguoiNhan) :
                new ObjectParameter("maNguoiNhan", typeof(int));
    
            var noiDungParameter = noiDung != null ?
                new ObjectParameter("noiDung", noiDung) :
                new ObjectParameter("noiDung", typeof(string));
    
            var loaiThuParameter = loaiThu != null ?
                new ObjectParameter("loaiThu", loaiThu) :
                new ObjectParameter("loaiThu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_themBangMail_Result>("sp_themBangMail", tieuDeParameter, maNguoiGuiParameter, maNguoiNhanParameter, noiDungParameter, loaiThuParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_themKetQuaDiemDanh(Nullable<int> maUser, Nullable<int> maMH, Nullable<int> maPhong, Nullable<int> loaiUS)
        {
            var maUserParameter = maUser.HasValue ?
                new ObjectParameter("maUser", maUser) :
                new ObjectParameter("maUser", typeof(int));
    
            var maMHParameter = maMH.HasValue ?
                new ObjectParameter("maMH", maMH) :
                new ObjectParameter("maMH", typeof(int));
    
            var maPhongParameter = maPhong.HasValue ?
                new ObjectParameter("maPhong", maPhong) :
                new ObjectParameter("maPhong", typeof(int));
    
            var loaiUSParameter = loaiUS.HasValue ?
                new ObjectParameter("loaiUS", loaiUS) :
                new ObjectParameter("loaiUS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_themKetQuaDiemDanh", maUserParameter, maMHParameter, maPhongParameter, loaiUSParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
